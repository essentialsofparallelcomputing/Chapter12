# These are instructions to setup a Ubuntu virtual machine for the examples in
# this chapter. The first part of the instructions must be done manually. The
# last half can be done by executing this file as a script as instructed.

# Download VirtualBox and install

# Download Ubuntu desktop install and save on local disk [ubuntu-20.04-desktop-amd64.iso]
# Download VBoxGuestAdditions.iso
# On Mac already at /Applications/VirtualBox.app/Contents/MacOS/VBoxGuestAdditions.iso

# Setup new machine
# See the README.autovirtualbox script for directions for setting up base virtual machine

# sign in

# click through whats new

# select dots at bottom left and start up a terminal

# Reboot to get cut and paste and screen size fixed

# git clone https://github.com/essentialsofparallelcomputing/Chapter12.git

# Run this README as a script to install rest of packages
#    Chapter12/README.virtualbox

# ====
sudo apt-get update

# CUDA
 
#wget https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/cuda-repo-ubuntu1804_10.2.89-1_amd64.deb
#sudo dpkg -i cuda-repo-ubuntu1804_10.2.89-1_amd64.deb
#sudo apt-key add /var/cuda-repo-10.2.89-1_amd64/7fa2af90.pub
#sudo apt-key adv --fetch-keys https://developer.download.nvidia.com/compute/cuda/repos/ubuntu1804/x86_64/7fa2af90.pub
#sudo apt-get update
#sudo apt-get install cuda

# Set your environment up in your .bash_profile
#export PATH=/usr/local/cuda-10.2/bin:/usr/local/cuda-10.2/NsightCompute-2019.1:${PATH}
#export LD_LIBRARY_PATH=/usr/local/cuda-10.2/lib64\
#                         ${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}

# OpenCL packages

#sudo apt install clinfo ocl-icd-libopencl1 ocl-icd


pushd /tmp
wget https://apt.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
sudo apt-key add GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
rm GPG-PUB-KEY-INTEL-SW-PRODUCTS-2023.PUB
popd
sudo add-apt-repository "deb https://apt.repos.intel.com/oneapi all main"
sudo apt-get update -y
sudo apt-get install intel-basekit -y
sudo apt-get install intel-hpckit -y
sudo cmake pkg-config

# add to bash_profile "source /opt/intel/inteloneapi/setvars.sh"

source /opt/intel/inteloneapi/setvars.sh

cat << EOF | sudo tee /etc/apt/sources.list.d/intel-graphics.list
deb [trusted=yes arch=amd64] https://repositories.intel.com/graphics/ubuntu bionic main
EOF
sudo apt-get update && sudo apt-get install -y intel-opencl

sudo usermod -a -G video $USER

# triSYCL

sudo apt-get install doxygen
git clone https://github.com/triSYCL/triSYCL.git

# computeCPP

# DPCPP standalone

#SYCL_HOME=${HOME}/DPCC
#mkdir $SYCL_HOME
#cd $SYCL_HOME
#git clone https://github.com/intel/llvm -b sycl
#mkdir $SYCL_HOME/build
#cd $SYCL_HOME/build

#cmake -DCMAKE_BUILD_TYPE=Release -DLLVM_TARGETS_TO_BUILD="X86" \
#-DLLVM_EXTERNAL_PROJECTS="llvm-spirv;sycl";opencl-aot \
#-DLLVM_ENABLE_PROJECTS="clang;llvm-spirv;sycl;opencl-aot" \
#-DLLVM_EXTERNAL_SYCL_SOURCE_DIR=$SYCL_HOME/llvm/sycl \
#-DLLVM_EXTERNAL_LLVM_SPIRV_SOURCE_DIR=$SYCL_HOME/llvm/llvm-spirv \
#$SYCL_HOME/llvm/llvm

#make -j 2 sycl-toolchain opencl-aot

#wget https://github.com/intel/compute-runtime/releases/20.05.15524

#git clone https://github.com/intel/tbb.git

# Kokkos

git clone https://github.com/kokkos/kokkos Kokkos_build
pushd Kokkos_build
mkdir build && cd build
cmake .. -DCMAKE_INSTALL_PREFIX=${HOME}/Kokkos -DKokkos_ENABLE_OPENMP=On
make install
popd

export Kokkos_DIR=${HOME}/Kokkos/lib/cmake/Kokkos

# Raja

git clone --recursive https://github.com/llnl/raja.git Raja_build
pushd Raja_build
mkdir build && cd build
cmake ../ -DCMAKE_INSTALL_PREFIX=${HOME}/Raja
make install
popd

export Raja_DIR=${HOME}/Raja/share/raja/cmake

# Bash profile
#source /opt/intel/inteloneapi/setvars.sh

#export Kokkos_DIR=${HOME}/Kokkos/lib/cmake/Kokkos
#export Raja_DIR=${HOME}/Raja/share/raja/cmake

# ====================

# Manually select pull-down menu Devices -> Install Guest additions
# May need to shutdown and restart guest VM

#sudo apt install openjdk-8-jdk
# sudo update-alternatives --config java
# and pick the java-8

# If Software updater prompts, install updated software --> wait ....
